BiasedMapEquation::init()...
=======================================================
  Infomap v1.3.0 starts at 2021-01-24 18:44:36
  -> Input network: MCI_no_LM_adj.net
  -> Output path:   ./
  -> Configuration: weight-threshold = 0.5
                    tree
                    ftree
                    clu
                    clu-level = -1
                    output = clu
                    num-trials = 3
                    verbose
=======================================================
Parsing undirected network from file 'MCI_no_LM_adj.net'... 
  Parsing vertices...
  -> 390 physical nodes added
  Parsing links...
  -> 14247 links
Done!
-------------------------------------
  -> 390 nodes
  -> 14247 links with total weight 9359.70564
  -> 23485 links ignored by weight threshold with total weight 6846.89947 (42.2%)
  -> Ordinary network input, using the Map Equation for first order network flows
Calculating global network flow using flow model 'undirected'... 
  -> Using undirected links.
  => Sum node flow: 1, sum link flow: 1
Build internal network with 390 nodes and 14247 links...
BiasedMapEquation::init()...
InfomapBase::init()...
BiasedMapEquation::initNetwork()...
MapEquation::initNetwork()...
Calculating one-level codelength... done!
 -> One-level codelength: 8.20282705
Calculating entropy rate... done!
  -> Entropy rate: 5.138905697
Run Infomap...

================================================
Trial 1/3 starting at 2021-01-24 18:44:39
================================================
Hierarchical partition...
Trying to find modular structure... 

Iteration 1:
Level 1 (codelength: 8.20282705 + 2 + 0 = 10.20282705): Moving 390 nodes... done! -> codelength 0.459411743 + 7.18814803 + 0 = 7.647559778 in 31 modules.
Level 2 (codelength: 0.459411743 + 7.18814803 + 0 = 7.647559778): Moving 31 nodes... done! -> codelength 0.123962145 + 7.38683645 + 0 = 7.5107986 in 8 modules.
Level 3 (codelength: 0.123962145 + 7.38683645 + 0 = 7.5107986): Moving 8 nodes... done! -> codelength 0.123962145 + 7.38683645 + 0 = 7.5107986 in 8 modules.
-> Restored to codelength 0.123962145 + 7.38683645 + 0 = 7.5107986 in 8 modules.

Fine tune...  -> moved to codelength 0.123962145 + 7.38683645 + 0 = 7.5107986 in 8 existing modules. Try tuning...
 -> done in 2 effective loops to codelength 0.121404573 + 7.36200927 + 0 = 7.483413846 in 8 modules.

Iteration 2:
Level 2 (codelength: 0.121404573 + 7.36200927 + 0 = 7.483413846): Moving 8 nodes... done! -> codelength 0.121404573 + 7.36200927 + 0 = 7.483413846 in 8 modules.
-> Restored to codelength 0.121404573 + 7.36200927 + 0 = 7.483413846 in 8 modules.

Coarse tune... no improvement.
Partitioned to codelength 0.121404573 + 7.36200927 + 0 = 7.483413846 in 8 modules.

Find hierarchical super modules iteratively...
Iteration 1, finding super modules to 8 modules... 
failed to find non-trivial super modules.
Finding super modules done! Added 0 levels with hierarchical codelength 7.483413846 in 8 top modules.

Find sub modules recursively from 8 top modules with codelength: 0.121404573 + 7.36200927 = 7.483413846
Level 1: 100% of the flow in 8 modules. Partitioning... done! Codelength: 0 + 7.36200927 (+ 0 left to improve) -> limit: 7.483413846 bits.
  -> Found 2 levels with codelength 7.483413846

=> Trial 1/3 finished in 0.440200001s with codelength 7.48341385
Write tree to ./MCI_no_LM_adj.tree... done!
Write flow tree to ./MCI_no_LM_adj.ftree... done!
Write node modules to ./MCI_no_LM_adj.clu... done!
Removed 1 levels of modules.

================================================
Trial 2/3 starting at 2021-01-24 18:44:40
================================================
Hierarchical partition...
Trying to find modular structure... 

Iteration 1:
Level 1 (codelength: 8.20282705 + 2 + 0 = 10.20282705): Moving 390 nodes... done! -> codelength 0.378769769 + 7.24640734 + 0 = 7.625177107 in 28 modules.
Level 2 (codelength: 0.378769769 + 7.24640734 + 0 = 7.625177107): Moving 28 nodes... done! -> codelength 0.134636307 + 7.38643647 + 0 = 7.52107278 in 8 modules.
Level 3 (codelength: 0.134636307 + 7.38643647 + 0 = 7.52107278): Moving 8 nodes... done! -> codelength 0.130266572 + 7.39058511 + 0 = 7.520851679 in 7 modules.
Level 4 (codelength: 0.130266572 + 7.39058511 + 0 = 7.520851679): Moving 7 nodes... done! -> codelength 0.130266572 + 7.39058511 + 0 = 7.520851679 in 7 modules.
-> Restored to codelength 0.130266572 + 7.39058511 + 0 = 7.520851679 in 7 modules.

Fine tune...  -> moved to codelength 0.130266572 + 7.39058511 + 0 = 7.520851679 in 7 existing modules. Try tuning...
 -> done in 3 effective loops to codelength 0.116102196 + 7.36748503 + 0 = 7.483587231 in 7 modules.

Iteration 2:
Level 2 (codelength: 0.116102196 + 7.36748503 + 0 = 7.483587231): Moving 7 nodes... done! -> codelength 0.116102196 + 7.36748503 + 0 = 7.483587231 in 7 modules.
Level 3 (codelength: 0.116102196 + 7.36748503 + 0 = 7.483587231): Moving 7 nodes... done! -> codelength 0.116102196 + 7.36748503 + 0 = 7.483587231 in 7 modules.
-> Restored to codelength 0.116102196 + 7.36748503 + 0 = 7.483587231 in 7 modules.

Coarse tune... no improvement.
Partitioned to codelength 0.116102196 + 7.36748503 + 0 = 7.483587231 in 7 modules.

Find hierarchical super modules iteratively...
Iteration 1, finding super modules to 7 modules... 
failed to find non-trivial super modules.
Finding super modules done! Added 0 levels with hierarchical codelength 7.483587231 in 7 top modules.

Find sub modules recursively from 7 top modules with codelength: 0.116102196 + 7.36748503 = 7.483587231
Level 1: 100% of the flow in 7 modules. Partitioning... done! Codelength: 0 + 7.36748503 (+ 0 left to improve) -> limit: 7.483587231 bits.
  -> Found 2 levels with codelength 7.483587231

=> Trial 2/3 finished in 0.218299999s with codelength 7.48358723
Removed 1 levels of modules.

================================================
Trial 3/3 starting at 2021-01-24 18:44:40
================================================
Hierarchical partition...
Trying to find modular structure... 

Iteration 1:
Level 1 (codelength: 8.20282705 + 2 + 0 = 10.20282705): Moving 390 nodes... done! -> codelength 0.409678067 + 7.20756072 + 0 = 7.617238787 in 30 modules.
Level 2 (codelength: 0.409678067 + 7.20756072 + 0 = 7.617238787): Moving 30 nodes... done! -> codelength 0.127289216 + 7.38881041 + 0 = 7.516099626 in 9 modules.
Level 3 (codelength: 0.127289216 + 7.38881041 + 0 = 7.516099626): Moving 9 nodes... done! -> codelength 0.113800618 + 7.40167685 + 0 = 7.51547747 in 8 modules.
Level 4 (codelength: 0.113800618 + 7.40167685 + 0 = 7.51547747): Moving 8 nodes... done! -> codelength 0.113800618 + 7.40167685 + 0 = 7.51547747 in 8 modules.
-> Restored to codelength 0.113800618 + 7.40167685 + 0 = 7.51547747 in 8 modules.

Fine tune...  -> moved to codelength 0.113800618 + 7.40167685 + 0 = 7.51547747 in 8 existing modules. Try tuning...
 -> done in 2 effective loops to codelength 0.122833537 + 7.36323931 + 0 = 7.486072842 in 8 modules.

Iteration 2:
Level 2 (codelength: 0.122833537 + 7.36323931 + 0 = 7.486072842): Moving 8 nodes... done! -> codelength 0.0991898029 + 7.38615527 + 0 = 7.48534507 in 6 modules.
Level 3 (codelength: 0.0991898029 + 7.38615527 + 0 = 7.48534507): Moving 6 nodes... done! -> codelength 0.0991898029 + 7.38615527 + 0 = 7.48534507 in 6 modules.
-> Restored to codelength 0.0991898029 + 7.38615527 + 0 = 7.48534507 in 6 modules.

Coarse tune... no improvement.
Partitioned to codelength 0.0991898029 + 7.38615527 + 0 = 7.48534507 in 6 modules.

Find hierarchical super modules iteratively...
Iteration 1, finding super modules to 6 modules... 
failed to find non-trivial super modules.
Finding super modules done! Added 0 levels with hierarchical codelength 7.48534507 in 6 top modules.

Find sub modules recursively from 6 top modules with codelength: 0.0991898029 + 7.38615527 = 7.48534507
Level 1: 100% of the flow in 6 modules. Partitioning... done! Codelength: 0 + 7.38615527 (+ 0 left to improve) -> limit: 7.48534507 bits.
  -> Found 2 levels with codelength 7.48534507

=> Trial 3/3 finished in 0.2262s with codelength 7.48534507


================================================
Summary after 3 trials
================================================
BiasedMapEquation::initNetwork()...
MapEquation::initNetwork()...

 -> Initiated to codelength 7.48341385 in 2 levels with 8 top modules.
Write tree to ./MCI_no_LM_adj.tree... done!
Write flow tree to ./MCI_no_LM_adj.ftree... done!
Write node modules to ./MCI_no_LM_adj.clu... done!
Codelengths: [7.483413846, 7.483587231, 7.485345070, ]
[min, average, max] codelength: [7.483413846, 7.484115382, 7.485345070]

Best end modular solution in 2 levels:
Per level number of modules:         [          8,           0] (sum: 8)
Per level number of leaf nodes:      [          0,         390] (sum: 390)
Per level average child degree:      [          8,       48.75] (average: 47.9309)
Per level codelength for modules:    [0.121404573, 0.000000000] (sum: 0.121404573)
Per level codelength for leaf nodes: [0.000000000, 7.362009272] (sum: 7.362009272)
Per level codelength total:          [0.121404573, 7.362009272] (sum: 7.483413846)

===================================================
  Infomap ends at 2021-01-24 18:44:40
  (Elapsed time: 4.809100000s)
===================================================